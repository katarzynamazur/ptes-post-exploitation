#!/bin/bash

#
# PTES 3.2.1
# Identify all the network services offered by the target machine. This may lead to the discovery of services not identified by initial scanning as well as the discovery of other machines and networks. The identification of services not shown in scanning can also provide information on possible filtering and control systems implemented in the network and/or host. In addition, the tester may be able to leverage these services to compromise other machines. Most operating system include a method of identifying TCP and UDP connections made to and from the machine. By checking both connections to and from a compromised machine it is possible to find relationships that were previously unknown. As well as the host the service should also be considered, this may reveal services listening on non-standard ports and indicate trust relationships such as keyless authentication for SSH.

# 

exists()
{
  command -v "$1" >/dev/null 2>&1
}

print_newline()
{
    for i in {0..80}
    do
        echo -ne "\e[00;90m#"
    done
    echo "" 
}

install_software()
{
    sudo apt-get update && apt-get upgrade
    
    # netstat
    sudo apt-get install net-tools -y
    
    # nmap
    sudo apt-get install nmap -y
    
    # ss
    sudo apt-get install -y iproute2
    
    # lsof
    sudo apt-get install -y lsof
}

netstat_tcp_check()
{
    #    -t - TCP ports
    #    -n - numerical addresses instead of resolving hosts
    #    -l - only listening ports
    #    -p - PID and name of the listener’s process (needs sudo)

    if exists netstat; then
      netstat1=`sudo netstat -tnlp`
        echo -e "\e[00;31m[-] Listening TCP services:\e[00m\n$netstat1"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have netstat'
    fi
}

nmap_tcp_check()
{
    # scan software verion running on open TCP port
    if exists nmap; then
      nmap1=`sudo nmap -sVT -O 127.0.0.1`
        echo -e "\e[00;31m[-] Listening TCP services:\e[00m\n$nmap1"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have nmap'
    fi
}

ss_tcp_check()
{
    # newer netstat
    if exists ss; then
      ss1=`sudo ss -tnlp`
        echo -e "\e[00;31m[-] Listening TCP services:\e[00m\n$ss1"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have ss'
    fi
}

lsof_tcp_check()
{
    # lsof is a command-line utility that provides information about files opened by processes
    #    -n - Do not convert port numbers to port names.
    #    -p - Do not resolve hostnames, show numerical addresses.
    #    -iTCP -sTCP:LISTEN - Show only network files with TCP state LISTEN.
    if exists lsof; then
      lsof1=`sudo lsof -nP -iTCP -sTCP:LISTEN`
        echo -e "\e[00;31m[-] Listening TCP services:\e[00m\n$lsof1"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have lsof'
    fi
}

netstat_udp_check()
{
    # 	 -u - UDP ports
    #    -n - numerical addresses instead of resolving hosts
    #    -p - PID and name of the listener’s process (needs sudo)
    #    -l - only listening ports
    if exists netstat; then
      netstat2=`sudo netstat -unp`
        echo -e "\e[00;31m[-] Listening UDP services:\e[00m\n$netstat2"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have netstat'
    fi
    
    if exists netstat; then
      netstat3=`sudo netstat -unpl`
        echo -e "\e[00;31m[-] Listening UDP services:\e[00m\n$netstat3"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have netstat'
    fi
}

nmap_udp_check()
{
    if exists nmap; then
      nmap2=`sudo nmap -sVU -O 127.0.0.1`
        echo -e "\e[00;31m[-] Listening UDP services:\e[00m\n$nmap2"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have nmap'
    fi
}

ss_udp_check()
{
    if exists ss; then
      ss2=`sudo ss -unlp`
        echo -e "\e[00;31m[-] Listening UDP services:\e[00m\n$ss2"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have ss'
    fi

    if exists ss; then
      ss3=`sudo ss -unp`
        echo -e "\e[00;31m[-] Listening UDP services:\e[00m\n$ss3"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have ss'
    fi
}

lsof_udp_check()
{
    if exists lsof; then
      lsof2=`sudo lsof -iUDP -P -n`
        echo -e "\e[00;31m[-] Listening UDP services:\e[00m\n$lsof2"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have lsof'
    fi
}

ptes321()
{
    netstat_tcp_check
    nmap_tcp_check
    ss_tcp_check
    lsof_tcp_check
    
    netstat_udp_check
    nmap_udp_check
    ss_udp_check
    lsof_udp_check
}

if [ $# -eq 0 ]
    then
        echo "No arguments supplied"
        exit 1
fi

output=$1
print_newline > $output   
install_software  
ptes321
cat $output
