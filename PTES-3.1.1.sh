#!/bin/bash

#
# PTES 3.1.1
# Identify all of the network interfaces on the machine along with their IP addresses, subnet masks, and gateways. 
# By identifying the interfaces and settings, networks and services can be prioritized for targeting. 
#

exists()
{
  command -v "$1" >/dev/null 2>&1
}

print_newline()
{
    for i in {0..80}
    do
        echo -ne "\e[00;90m#"
    done
    echo "" 
}

install_software() 
{
    sudo apt-get update && apt-get upgrade
    
    # net manager
    sudo apt-get install network-manager -y
    sudo systemctl start NetworkManager.service 
    sudo systemctl enable NetworkManager.service
    
    # lspci 
    sudo apt-get install pciutils -y
    
    # ethtool
    sudo apt-get install ethtool -y
}

uninstall_software()
{
    # net manager 
    sudo systemctl stop NetworkManager.service 
    sudo systemctl disable NetworkManager.service
    
    sudo systemctl stop NetworkManager-wait-online.service
    sudo systemctl disable NetworkManager-wait-online.service

    sudo systemctl stop NetworkManager-dispatcher.service
    sudo systemctl disable NetworkManager-dispatcher.service

    sudo systemctl stop network-manager.service
    sudo systemctl disable network-manager.service
    
    sudo apt-get purge network-manager
    
    # ethtool
    sudo apt-get remove --auto-remove ethtool
    sudo apt-get purge ethtool
}

nmcli_check()
{
    # check some interface details info
    if exists nmcli; then
      nicinfo3=`nmcli device status 2>/dev/null` 
      nicinfo4=`nmcli connection show 2>/dev/null` 
      echo -e "\e[00;31m[-] Interface status:\e[00m\n$nicinfo3"  >> $output  
      print_newline >> $output  
      echo -e "\e[00;31m[-] Existing network connections:\e[00m\n$nicinfo4"  >> $output  
      print_newline >> $output  
    else
      echo 'Your OS does not have nmcli'
    fi
}

ip_check()
{
    if exists ip; then
      nicinfo1=`/sbin/ip a 2>/dev/null`
      echo -e "\e[00;31m[-] Network and IP info:\e[00m\n$nicinfo1"  >> $output   
      print_newline >> $output  
    else
      echo 'Your OS does not have ip'
    fi
}

ethtool_check()
{
    # show information about NICs
    if exists ip; then
      if exists ethtool; then
        for iface in $(ip addr list | awk -F': ' '/^[0-9]/ && $2 != "lo" {print $2}')
        do
            nicinfo6=`sudo ethtool $iface 2>/dev/null` 
            nicinfo7=`sudo ethtool -i $iface 2>/dev/null` 
            echo -e "\e[00;31m[-] NIC settings:\e[00m\n$nicinfo6"  >> $output  
            echo -e "\n" >> $output
            echo -e "$nicinfo7"  >> $output  
            print_newline >> $output  
        done
      else
        echo 'Your OS does not have ip'
      fi
    else
      echo 'Your OS does not have ip'
    fi
}

lspci_check()
{
    # list NICs
    if exists lspci; then
      nicinfo5=`lspci | egrep -i --color 'network|ethernet|wireless|wi-fi' 2>/dev/null` 
      echo -e "\e[00;31m[-] NICs:\e[00m\n$nicinfo5"  >> $output  
      print_newline >> $output  
    else
      echo 'Your OS does not have lspci'
    fi
}

ptes311()
{
    nmcli_check
    ip_check
    ethtool_check
    lspci_check
}

if [ $# -eq 0 ]
    then
        echo "No arguments supplied"
        exit 1
fi

output=$1
print_newline > $output     
install_software
ptes311
cat $output
 




