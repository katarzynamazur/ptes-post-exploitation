#!/bin/bash

#
# PTES 3.1.2 
# Knowledge of other subnets, filtering or addressing schemes could be leveraged to escape a segmented network, leading to additional hosts and/or networks to probe and enumerate. This data could come from a variety of sources on a particluar host or network including:
#
#  -  Interfaces
#  -  Routing tables, including static and dynamic routes
#  -  ARP Tables, NetBios or other network protocols used for service and host discovery.
#  -  For multi-homed hosts, determine if they are acting as a router.
#

exists()
{
  command -v "$1" >/dev/null 2>&1
}

print_newline()
{
    for i in {0..80}
    do
        echo -ne "\e[00;90m#"
    done
    echo "" 
}

install_software() 
{
    sudo apt-get update && apt-get upgrade
    
    # route, arp
    sudo apt-get install net-tools -y
}

ip_check()
{
    # get information about interfaces
    if exists ip; then
      nicinfo1=`/sbin/ip a 2>/dev/null`
      echo -e "\e[00;31m[-] Network and IP info:\e[00m\n$nicinfo1"  >> $output   
    else
      echo 'Your OS does not have ip'
    fi
}

route_check()
{
    # get routing information
    if exists route; then
      routing1=`route 2>/dev/null`
      echo -e "\e[00;31m[-] Routing information:\e[00m\n$routing1"  >> $output   
      print_newline >> $output  
    else
      echo 'Your OS does not have route'
    fi
    if exists ip; then
      routing2=`ip route list 2>/dev/null`
      routing3=`ip route show | sed 's/\(\S\+\s\+\)\?default via \(\S\+\).*/\2/p; d'`
      echo -e "\e[00;31m[-] Routing information:\e[00m\n$routing2"  >> $output   
      echo -e "\e[00;31m[-] Default gateway IP:\e[00m\n$routing3"  >> $output   
      print_newline >> $output  
    else
      echo 'Your OS does not have ip'
    fi
}

arp_check()
{
    if exists arp; then
      arp1=`arp -vn 2>/dev/null`
      echo -e "\e[00;31m[-] ARP table:\e[00m\n$arp1"  >> $output   
    else
      echo 'Your OS does not have arp'
    fi
    if exists ip; then
      arp2=`ip neigh show 2>/dev/null`
      echo -e "\e[00;31m[-] ARP table:\e[00m\n$arp2"  >> $output   
      print_newline >> $output  
    else
      echo 'Your OS does not have ip'
    fi 
}

ptes312()
{
    ip_check
    route_check
    arp_check
}

if [ $# -eq 0 ]
    then
        echo "No arguments supplied"
        exit 1
fi

output=$1
print_newline > $output     
install_software
ptes312
cat $output
