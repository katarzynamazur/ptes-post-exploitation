#!/bin/bash

#
# PTES 3.1.3
# Identify all DNS servers in use, by assessing host settings. DNS servers and information could then be used to develop and execute a plan for discovering additional hosts and services on the target network. In the case that a DNS Server is compromised, the DNS database will provide valueable information about hosts and services that can be used to prioritize targets for the remainder of the assessment. The modification and addition of new records could be used to intercept the data of services depending on DNS. 
#

exists()
{
  command -v "$1" >/dev/null 2>&1
}

print_newline()
{
    for i in {0..80}
    do
        echo -ne "\e[00;90m#"
    done
    echo "" 
}

install_software()
{
    sudo apt-get update && apt-get upgrade
    
    # nslookup
    sudo apt install dnsutils -y
    
    # net manager
    sudo apt-get install network-manager -y
    sudo systemctl start NetworkManager.service 
    sudo systemctl enable NetworkManager.service
}

uninstall_software()
{
    # net manager 
    sudo systemctl stop NetworkManager.service 
    sudo systemctl disable NetworkManager.service
    
    sudo systemctl stop NetworkManager-wait-online.service
    sudo systemctl disable NetworkManager-wait-online.service

    sudo systemctl stop NetworkManager-dispatcher.service
    sudo systemctl disable NetworkManager-dispatcher.service

    sudo systemctl stop network-manager.service
    sudo systemctl disable network-manager.service
    
    sudo apt-get purge network-manager
}

dns_check()
{
    dns1=`nslookup 127.0.0.1 2>/dev/null`
    if [ "$dns1" ]; then
        echo -e "\e[00;31m[-] DNS details:\e[00m\n$dns1"  >> $output
    fi
    dns2=`nslookup localhost 2>/dev/null`
    if [ "$dns2" ]; then
        echo -e "\e[00;31m[-] DNS details:\e[00m\n$dns2"  >> $output 
    fi
    dns3=`grep "nameserver" /etc/resolv.conf 2>/dev/null`
    if [ "$dns3" ]; then
        echo -e "\e[00;31m[-] DNS details:\e[00m\n$dns3"  >> $output 
    fi
    if exists resolvectl; then
      dns4=`resolvectl status 2>/dev/null`
      if [ "$dns4" ]; then
        echo -e "\e[00;31m[-] DNS details:\e[00m\n$dns4"  >> $output 
        print_newline >> $output  
      fi
    else
      echo 'Your OS does not have resolvectl'
    fi
    if exists nmcli; then
      dns5=`( nmcli dev list || nmcli dev show ) 2>/dev/null | grep DNS 2>/dev/null`
        echo -e "\e[00;31m[-] DNS details:\e[00m\n$dns5"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have nmcli'
    fi
}

ptes313()
{
    dns_check
}

if [ $# -eq 0 ]
    then
        echo "No arguments supplied"
        exit 1
fi

output=$1
print_newline > $output     
install_software
ptes313
cat $output
