#!/bin/bash

#
# PTES 3.2.2
# All VPN connections into and out of the target machine or network should be identified. Outbound connections can provide paths into new systems which may have not previously been identified. Both inbound and outbound can identify new systems and possible business relationships. VPN connections often bypass firewalls and intrusion detection/prevention systems due to their inability to decrypt or inspect encrypted traffic. This fact makes VPNs ideal to launch attacks through. Any new targets should be verified as in scope before launching attacks against them. The presence of VPN client or server connections on the target host may also provide access to credentials previously not known that could be used to target other hosts and services. 

# 

exists()
{
  command -v "$1" >/dev/null 2>&1
}

print_newline()
{
    for i in {0..80}
    do
        echo -ne "\e[00;90m#"
    done
    echo "" 
}

install_software() 
{
    sudo apt-get update && apt-get upgrade
    
    # route, arp
    sudo apt-get install net-tools -y
    
    # net manager
    sudo apt-get install network-manager -y
    sudo systemctl start NetworkManager.service 
    sudo systemctl enable NetworkManager.service
}

uninstall_software()
{
    # net manager 
    sudo systemctl stop NetworkManager.service 
    sudo systemctl disable NetworkManager.service
    
    sudo systemctl stop NetworkManager-wait-online.service
    sudo systemctl disable NetworkManager-wait-online.service

    sudo systemctl stop NetworkManager-dispatcher.service
    sudo systemctl disable NetworkManager-dispatcher.service

    sudo systemctl stop network-manager.service
    sudo systemctl disable network-manager.service
    
    sudo apt-get purge network-manager
}

nmcli_vpn_check()
{
    # check if any VPN connection is active
    if exists nmcli; then
      nmcli1=`nmcli con | grep -i vpn`
        echo -e "\e[00;31m[-] VPN connection details:\e[00m\n$nmcli1"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have nmcli'
    fi
    
    # check if any VPN connection is active
    if exists nmcli; then
      nmcli2=`nmcli con show --active | grep -i vpn`
        echo -e "\e[00;31m[-] VPN connection details:\e[00m\n$nmcli2"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have nmcli'
    fi
    
    # check if any VPN connection is active
    if exists nmcli; then
      nmcli3=`nmcli con show --active | grep -i tun`
        echo -e "\e[00;31m[-] VPN connection details:\e[00m\n$nmcli3"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have nmcli'
    fi
}

ip_vpn_check()
{
    # check if any VPN connection is active
    if exists ip; then
      ip1=`sudo /sbin/ip a | grep tun`
        echo -e "\e[00;31m[-] VPN connection details:\e[00m\n$ip1"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have ip'
    fi
    
    # check if any VPN connection is active
    if exists ip; then
      ip2=`sudo /sbin/ip a | grep tap`
        echo -e "\e[00;31m[-] VPN connection details:\e[00m\n$ip2"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have ip'
    fi
    
    # check if any VPN connection is active
    if exists ip; then
      ip3=`sudo /sbin/ip a | grep vpn`
        echo -e "\e[00;31m[-] VPN connection details:\e[00m\n$ip3"  >> $output 
        print_newline >> $output  
    else
      echo 'Your OS does not have ip'
    fi
}

ptes322()
{
    nmcli_vpn_check
    ip_vpn_check
}

output=$1
print_newline > $output   
install_software  
ptes322
cat $output
